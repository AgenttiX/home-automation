version: "3"
services:
  # ddclient:
  #   image: lscr.io/linuxserver/ddclient:latest
  #   container_name: home_assistant_ddclient
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Helsinki
  #   volumes:
  #     - ./ddclient:/config
  #   restart: always
  #   labels:
  #     - "com.centurylinklabs.watchtower.scope=home-assistant"
  # duckdns:
  #   # There is also a DuckDNS integration for Home Assistant, but running it in a separate container is more secure.
  #   # https://www.home-assistant.io/integrations/duckdns/
  #   image: lscr.io/linuxserver/duckdns:latest
  #   container_name: home_assistant_duckdns
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Helsinki
  #     - LOG_FILE=true
  #   env_file:
  #     # The SUBDOMAINS and TOKEN variables should be defined in this file
  #     - ./duckdns/duckdns.env
  #   volumes:
  #     - ./duckdns/config:/config
  #   restart: always
  #   labels:
  #     - "com.centurylinklabs.watchtower.scope=home-assistant"
  home_assistant:
    container_name: home_assistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./config:/config
      # - ./ssl:/ssl
      - /etc/localtime:/etc/localtime:ro
      # DBus for official Home Assistant Bluetooth
      - /run/dbus:/run/dbus:ro
    restart: always
    # If there is no need for Bluetooth, this should be used instead of "network_mode: host"
    # ports:
    #   - "8123:8123"
    # This can be used to pass the raw bluetooth adapter.
    # Passing only the HCI from the host seems not to work.
    # However, passing the entire Bluetooth adapter would require disabling Bluetooth services
    # from the host and running them inside the container.
    # https://stackoverflow.com/questions/28868393/accessing-bluetooth-dongle-from-inside-docker
    # device:
    #   - /dev/ASDF
    # This gives the container access to the Bluetooth device etc.
    # https://community.home-assistant.io/t/avoid-network-mode-host-for-docker/47250
    privileged: true
    # This gives the container access to the host network for discovery etc.
    # TODO: test whether this can be disabled without breaking Bluetooth
    network_mode: host
    labels:
      - "com.centurylinklabs.watchtower.scope=home-assistant"
  mqtt:
    container_name: home_assistant_mqtt
    image: eclipse-mosquitto:latest
    # The auth folder must be writable so that the mosquitto_passwd utility can be used
    volumes:
      - ./mosquitto/auth:/mosquitto/auth
      - ./mosquitto/config:/mosquitto/config:ro
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - "1883:1883"
      - "8883:8883"
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.scope=home-assistant"
  #nginx:
    #container_name: home_assistant_nginx
    #build: ./nginx
    #volumes:
      #- ./nginx/logs:/var/log/nginx
      #- ./nginx/dhparam:/etc/nginx/dhparam
      #- ./certbot/conf:/certbot:ro
    #ports:
      #- "80:80"
      #- "443:443"
  watchtower:
    container_name: home_assistant_watchtower
    hostname: watchtower
    image: containrrr/watchtower:latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
    # Run once a week on Sunday at 04:00
    command: --cleanup --schedule "0 0 4 * * 0" --scope home-assistant
    labels:
      - "com.centurylinklabs.watchtower.scope=home-assistant"
    restart: always


# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

# https://github.com/basnijholt/adaptive-lighting
adaptive_lighting:
  - name: "default"
    lights:
      - light.dining_table_1
      - light.dining_table_2
      - light.hallway_1
      - light.hallway_2
      - light.hallway_3
      - light.hallway_4
      - light.hallway_5
      - light.kitchen_1
      - light.kitchen_2
      - light.living_room_1
      - light.living_room_2
      - light.living_room_3
      - light.ps_lamp
      - light.table_lamp_1
      - light.table_lamp_2
    min_brightness: 80
    max_brightness: 100
    sunrise_time: "06:00:00"
    sunset_time: "22:00:00"
    take_over_control: true
    detect_non_ha_changes: true

# https://github.com/custom-components/ble_monitor
ble_monitor:
  bt_interface:
    - !secret bluetooth_mac
  bt_auto_restart: True
  discovery: True

# MQTT no longer supports file-based configuration
# mqtt:
#   broker: home_assistant_mqtt
#   port: 1883
#   client_id: home_assistant
#   username: home_assistant
#   password: !secret mqtt_password
#   # https://www.home-assistant.io/docs/mqtt/certificate/
#   # certificate:

nordpool:

prometheus:

sensor:
  - platform: waqi
    token: !secret aqicn_api_token
    locations:
      - Helsinki

  # - platform: ethermineinfo
  #   miner_address: !secret miner_address
  #   currency_name: EUR

  - platform: nordpool
    VAT: True
    currency: "EUR"
    low_price_cutoff: 0.5
    region: "FI"
    precision: 3
    price_type: kWh
    # (transfer fee + tax)/(VAT * cents_to_eur)
    additional_costs: "{{(4.07+2.79372)/(1.24*100)|float}}"

template:
#  - trigger:
#      - platform: time_pattern
#        minutes: "/5"
  - sensor:
      - name: "Total Daily Energy"
        device_class: "energy"
        unit_of_measurement: "kWh"
        # https://community.home-assistant.io/t/how-to-automatically-include-and-sum-the-values-of-multiple-utility-meter-sensors/165814/4
        state: >
          {% set ns = namespace(states=[]) %}
          {% for s in states.sensor %}
            {% if s.object_id.startswith('tasmota_energy_today') and s.state != "unavailable" %}
              {% set ns.states = ns.states + [ s.state | float ] %}
            {% endif %}
          {% endfor %}
          {{ ns.states | sum | round(2) }}
      - name: "Total Power"
        device_class: "energy"
        unit_of_measurement: "W"
        state: >
          {% set ns = namespace(states=[]) %}
          {% for s in states.sensor %}
            {% if s.object_id.startswith('tasmota_energy_power') and s.state != "unavailable" %}
              {% set ns.states = ns.states + [ s.state | float ] %}
            {% endif %}
          {% endfor %}
          {{ ns.states | sum | round(2) }}
      - name: "Average Voltage"
        device_class: "voltage"
        unit_of_measurement: "V"
        state: >
          {% set ns = namespace(states=[]) %}
          {% for s in states.sensor %}
            {% if s.object_id.startswith('tasmota_energy_voltage') and s.state != "unavailable" %}
              {% set state = (s.state | float) %}
              {% if state != 0 %}
                {% set ns.states = ns.states + [ state ] %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ ns.states | average | round(2) }}
